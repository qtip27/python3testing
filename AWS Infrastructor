variable "stage" {
    type = string
    description = "Deployment stage"
    default = "staging"
}

variable "availability-zones" {
    type = list
    description = "AWS availability zones"
    default = [""]
}

variable "vpc-cidr" {
    type = string
    description = "VPC CIDR"
    default = ""
}

variable "private-cidrs" {
    type = list
    description = "Private CIDRs"
    default = [""]
}

    variable "public-cidrs" {
    type = list
    description = "Public CIDRs"
    default = [""]
}
module "vpc" {
  source = "terraform-aws-modules/vpc/aws"
  version = "2.7.0"

  name = "Staging VPC"

  cidr = "${var.vpc-cidr}"

  azs = "${var.availability-zones}"
  private_subnets = "${var.private-cidrs}"
  public_subnets = "${var.public-cidrs}"

  create_database_subnet_group = false
  enable_dns_hostnames = true
  enable_dns_support = true
  enable_nat_gateway = false

  tags = {
    Name = "Staging VPC"
  }

  public_subnet_tags = {
    Name = "staging-public"
    Stage = "var.stage"
  }

  private_subnet_tags = {
    Name = "staging-private"
    Stage = "var.stage"
  }
}

module "local-traffic-sg" {
  source = "terraform-aws-modules/security-group/aws"
  version = "3.0.1"

  name = "${var.stage}-local-traffic-sg"
  description = "Security group allowing only local traffic for Staging VPC"
  vpc_id = "${module.vpc.vpc_id}"

  ingress_cidr_blocks = ["var.public-cidrs"]
  ingress_with_self = [
    {
      rule = "all-all"
    },
  ]

  egress_cidr_blocks = ["0.0.0.0/0"]
  egress_rules = ["all-all"]

  tags = {
    Name = "local-traffic-sg"
  }
}

module "external-traffic-sg" {
  source = "terraform-aws-modules/security-group/aws"
  version = "3.0.1"

  name = "${var.stage}-external-traffic-sg"
  description = "Security group allowing external traffic for Staging VPC"
  vpc_id = "${module.vpc.vpc_id}"

  ingress_with_cidr_blocks = [
    {
      description = "External SSH access"
      from_port = 22
      to_port = 22
      protocol = "tcp"
      cidr_blocks = "0.0.0.0/0"
    },
    {
      description = "Allow external ping"
      from_port = 8
      to_port = 0
      protocol = "icmp"
      cidr_blocks = "0.0.0.0/0"
    }
  ]
  tags = {
    Name = "external-traffic-sg"
  }
}

module "web-server" {
    source = "terraform-aws-modules/ec2-instance/aws"

    name = "Web Server"
    ami = "ami-07ebfd5b3428b6f4d"
    instance_type = "t2.micro"
    subnet_id = element(module.vpc.public_subnets, 0)
    vpc_security_group_ids = [
        "${module.local-traffic-sg.this_security_group_id}",
        "${module.external-traffic-sg.this_security_group_id}"
    ]
    key_name = "staging-key"
    tags = {
        Name = "Staging Web Server"
    }
}
output "Webserver-Domain" {
  value = "${module.web-server.public_dns}"
}
